<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AM0AAAD/AAAA/wAAAM0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAqwAAAPMAAADkAAAA5wAAAOcAAADjAAAA9gAA
        AIwAAAAAAAAA1gAAAP8AAAD/AAAA1gAAAAAAAACMAAAA9gAAAOMAAADnAAAA5wAAAOQAAADzAAAAqgAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAB2AAAArAAAAKEAAACjAAAAowAA
        AKEAAACvAAAAYAAAAAAAAADYAAAA/wAAAP8AAADYAAAAAAAAAGAAAACvAAAAoQAAAKMAAACjAAAAoQAA
        AKwAAAB2AAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAIsAAAD2AAAA9gAAAIsAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAADAAAABgAA
        AAgAAAAHAAAABwAAAAcAAAAHAAAACAAAAAYAAAAGAAAAAAAAAMgAAADHAAAAAAAAAAYAAAAGAAAACAAA
        AAcAAAAHAAAABwAAAAcAAAAIAAAABgAAAAMAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGgAAABoAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAA
        ABkAAABPAAAATgAAAE4AAABPAAAATwAAAE8AAABPAAAATwAAAE8AAABPAAAATgAAAFAAAABGAAAARgAA
        AFAAAABOAAAATwAAAE8AAABPAAAATwAAAE8AAABPAAAATwAAAE4AAABOAAAATwAAABgAAAAAAAAAAQAA
        AAAAAAAHAAAA1AAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAA1AAA
        AAcAAAAAAAAAAAAAACIAAAD8AAAA/QAAAPsAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAA
        APwAAAD8AAAA/AAAAPwAAAD+AAAA/wAAAP8AAAD/AAAA/gAAAPwAAAD/AAAA/QAAAP0AAAD/AAAA/AAA
        AP0AAAD8AAAAIgAAAAAAAAAAAAAAIgAAAPsAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAO8AAADoAAAA6gAAAOcAAAD0AAAA+wAAAKkAAADrAAAA7AAA
        AKkAAAD5AAAA/wAAAPsAAAAiAAAAAAAAAAAAAAAiAAAA/QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAAfgAAAE0AAABZAAAASAAAAJ8AAADnAAAAAAAA
        ALEAAACzAAAAAAAAANoAAAD/AAAA+wAAACIAAAAAAAAAAAAAACIAAAD7AAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAADTAAAA9gAAAPcAAADSAAAA/QAAAP8AAAD7AAAAIgAAAAAAAAAAAAAAIQAAAPwAAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAPwAAAAhAAAAAAAAAAAAAAAAAAAAvAAA
        AP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAAD/AAAAvAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAGAAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAA
        ABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABoAAAAaAAAAGgAAABgAAAADAAAAAAAA
        AAAAAAABAAAAAAAAACAAAABXAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAA
        AFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVwAA
        ACAAAAAAAAAAAQAAAAAAAAAKAAAA3AAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAAD/AAAA3AAAAAoAAAAAAAAAAAAAACMAAAD8AAAA/QAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAA
        APsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD+AAAA/wAAAP8AAAD/AAAA/gAAAPwAAAD/AAAA/QAA
        AP0AAAD/AAAA+wAAAPwAAAD8AAAAIwAAAAAAAAAAAAAAIgAAAPwAAAD/AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOYAAADbAAAA3gAAANoAAADtAAAA+QAA
        AJUAAADmAAAA5wAAAJUAAAD2AAAA/wAAAPsAAAAiAAAAAAAAAAAAAAAiAAAA/QAAAP8AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAAggAAAFIAAABeAAAATQAA
        AKIAAADoAAAAAAAAALIAAAC0AAAAAAAAANsAAAD/AAAA+wAAACIAAAAAAAAAAAAAACMAAAD7AAAA/wAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADhAAAA+QAAAPoAAADgAAAA/gAAAP8AAAD7AAAAIwAAAAAAAAAAAAAAIAAA
        APsAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAPsAAAAgAAAAAAAA
        AAAAAAAAAAAArgAAAP8AAAD6AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAA
        APwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA+gAAAPwAAAD8AAAA+gAAAPoAAAD/AAAArgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAA
        AAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAA
        AAkAAAAAAAAAAAAAAAAAAAABAAAAAAAAACwAAABsAAAAaQAAAGkAAABqAAAAagAAAGoAAABqAAAAagAA
        AGoAAABqAAAAagAAAGoAAABqAAAAagAAAGoAAABqAAAAagAAAGoAAABqAAAAagAAAGoAAABqAAAAagAA
        AGkAAABpAAAAbAAAACwAAAAAAAAAAQAAAAAAAAAOAAAA4wAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP0AAAD/AAAA4wAAAA0AAAAAAAAAAAAAACMAAAD7AAAA/AAAAPoAAAD7AAAA+wAA
        APsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD+AAAA/wAAAP8AAAD/AAAA/gAA
        APsAAAD/AAAA/AAAAPwAAAD/AAAA+wAAAPwAAAD7AAAAIwAAAAAAAAAAAAAAIgAAAPwAAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANsAAADMAAAA0AAA
        AMsAAADlAAAA+AAAAIAAAADfAAAA4QAAAIAAAADzAAAA/wAAAPsAAAAiAAAAAAAAAAAAAAAiAAAA/QAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAAhwAA
        AFoAAABmAAAAVQAAAKYAAADpAAAAAAAAALMAAAC2AAAAAAAAANwAAAD/AAAA+wAAACIAAAAAAAAAAAAA
        ACMAAAD7AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADtAAAA/AAAAP0AAADtAAAA/wAAAP8AAAD7AAAAIwAA
        AAAAAAAAAAAAHwAAAPoAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP0AAAD8AAAA/AAAAPwAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        APoAAAAfAAAAAAAAAAEAAAAAAAAAqgAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD/AAAA/QAA
        AP0AAAD/AAAAqQAAAAAAAAAB/+Qn/8gEIBPIBCAT/+Qn/0ACQAKX8k/pQAAAAoAAAAGAAAABgAAAAYAA
        ASGAAAABgAAAAYAAAAFAAAACQAAAAoAAAAGAAAABgAAAAYAAASGAAAABgAAAAUAAAAIAAAAAQAAAAoAA
        AAGAAAABgAAAAYAAASGAAAABgAAAAUAAAAI=
</value>
  </data>
</root>